{"version":3,"file":"projects_sst_src_js_components_buttons_js.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,0CAA0C;AAC1C;AACA,+BAA+B;AAC/B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://gulp-min/./projects/sst/src/js/components/buttons.js"],"sourcesContent":["const body = document.getElementsByTagName(\"BODY\")[0];\r\n\r\n// copy and typewriter\r\nconst typewriter = document.querySelectorAll(\".typewriter\");\r\nlet typewriterTimeOuts = [];\r\nconst typewriterFunc = (item, text, type, string) => {\r\n  typewriterTimeOuts.forEach(clearTimeout);\r\n  let typewriterValue = item.value,\r\n    typewriterString = text.dataset.content;\r\n  arr = typewriterValue;\r\n  typewriterTimeOuts = Object.keys(arr).map((key, index) => {\r\n    text.innerHTML = \"\";\r\n    return setTimeout(() => {\r\n      text.innerHTML += arr[key];\r\n    }, key * 100);\r\n  });\r\n};\r\n\r\nconst addCopyClass = (time, classId, element, classRem, value) => {\r\n  classId.classList.add(classRem);\r\n  element.querySelector(\".btn-text\").innerHTML = \"copiÃ©\";\r\n  setTimeout(() => {\r\n    classId.classList.remove(classRem);\r\n    typewriterFunc(\r\n      element,\r\n      element.querySelector(\".btn-text\"),\r\n      \"string\",\r\n      value\r\n    );\r\n  }, time);\r\n};\r\n\r\nconst copyButtonContentToClicBord = () => {\r\n  let copyButton = body.querySelectorAll(\".btn-copy\");\r\n  copyButton.forEach((element) => {\r\n    element.addEventListener(\"click\", () => {\r\n      let copytext = document.createElement(\"input\"),\r\n        elementValue = element.value;\r\n      copyContent = element.textContent;\r\n      copytext.value = element.value;\r\n      document.body.appendChild(copytext);\r\n      copytext.select();\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(copytext);\r\n      addCopyClass(1000, element, element, \"active\", elementValue);\r\n    });\r\n  });\r\n};\r\ncopyButtonContentToClicBord();\r\n\r\nconst layoutControlButtonTop = document.querySelector(\r\n  \".layout-buttons__item[data-type='top']\"\r\n);\r\n\r\n// When the user scrolls down 20px from the top of the document, show the button\r\nconst scrollSection = document.querySelector('.layout');\r\nfunction scrollFunction() {\r\n  if (scrollSection.scrollTop > 50) {\r\n    layoutControlButtonTop.classList.add(\"visible\");\r\n  } else {\r\n    layoutControlButtonTop.classList.remove(\"visible\");\r\n  }\r\n}\r\n\r\nlayoutControlButtonTop.addEventListener(\"click\", () => {\r\n  document.body.scrollTop = 0; // For Safari\r\n  document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  scrollSection.classList.remove(\"scroll\");\r\n  scrollSection.scrollTop = 0; // For Safari\r\n});\r\n\r\nlet current_calculation_position = window.pageYOffset;\r\ndocument.addEventListener(\"scroll\", () => {\r\n  scrollFunction();\r\n  current_calculation_position = window.pageYOffset;\r\n  layoutControlButtonTop.classList[\r\n    current_calculation_position > 50 ? \"add\" : \"remove\"\r\n  ](\"visible\");\r\n});\r\n"],"names":[],"sourceRoot":""}